plugins {
    id 'java-library'

    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'ca.cutterslade.analyze'
}

ext {
    set('springCloudVersion', "2022.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    api project(":springwolf-core")

    implementation "com.asyncapi:asyncapi-core:${asyncapiCoreVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"

    implementation "org.springframework:spring-context"
    implementation "org.springframework.cloud:spring-cloud-stream"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"

    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
    testImplementation "org.apache.kafka:kafka-streams:${kafkaStreamsVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"

    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation "org.springframework:spring-beans"
    testImplementation "org.springframework:spring-test"
}

jar {
    enabled = true
    archiveClassifier = ''
}
bootJar.enabled = false

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    dependsOn spotlessApply // Automatically fix code formatting if possible

    useJUnitPlatform()
}

spotless {
    encoding 'UTF-8'

    java {
        palantirJavaFormat()

        importOrder('', 'javax', 'java', '\\#')
        replaceRegex("Remove wildcard imports", "import\\s+[^\\*\\s]+\\*;(\\r\\n|\\r|\\n)", "\$1")
        removeUnusedImports()

        trimTrailingWhitespace()
        endWithNewline()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'springwolf-cloud-stream'
                description = 'Automated JSON API documentation for Spring Boot cloud stream functions'
            }
        }
    }
}
