plugins {
    id 'java-library'

    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'ca.cutterslade.analyze'
}

dependencies {
    api project(":springwolf-asyncapi")

    implementation "io.swagger.core.v3:swagger-annotations-jakarta:${swaggerVersion}@jar"
    implementation "io.swagger.core.v3:swagger-core-jakarta:${swaggerVersion}"

    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"

    implementation "org.springframework.boot:spring-boot"

    implementation "org.springframework:spring-web"
    implementation "org.springframework:spring-context"
    implementation "org.springframework:spring-messaging"
    implementation "org.springframework:spring-beans"
    implementation "org.springframework:spring-core"
    implementation "org.springframework.boot:spring-boot-autoconfigure"

    implementation "io.swagger.core.v3:swagger-models-jakarta:${swaggerVersion}"
    implementation "jakarta.annotation:jakarta.annotation-api:${jakartaAnnotationApiVersion}"
    implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApiVersion}"

    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"

    compileOnly "org.springframework.boot:spring-boot-actuator"
    compileOnly "org.springframework:spring-webmvc"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
    testImplementation "org.awaitility:awaitility:${awaitilityVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoJunitJupiterVersion}"
    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation "org.springframework:spring-test"
    permitTestUnusedDeclared "org.slf4j:slf4j-simple:${slf4jSimpleVersion}"


    testRuntimeOnly "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
}

jar {
    enabled = true
    archiveClassifier = ''
}
bootJar.enabled = false

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'springwolf-core'
                description = 'Automated JSON API documentation for async APIs (Kafka etc.) interfaces built with Spring'
            }
        }
    }
}
