plugins {
    id 'java-library'

    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'ca.cutterslade.analyze'
}

ext['junit-jupiter.version'] = "${junitJupiterVersion}"

dependencies {
    api project(":springwolf-core")
    api project(":springwolf-asyncapi")

    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"

    implementation "org.springframework:spring-context"
    implementation "org.springframework:spring-core"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly "org.slf4j:slf4j-simple:${slf4jSimpleVersion}"
}

jar {
    enabled = true
    archiveClassifier = ''
}
bootJar.enabled = false

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'springwolf-generic-binding'
                description = 'Document any AsyncApi binding in Springwolf using a generic way'
            }
        }
    }
}
