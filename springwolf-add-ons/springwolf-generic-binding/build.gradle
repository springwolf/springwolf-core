import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'

    alias libs.plugins.spring.boot
    alias libs.plugins.cutterslade.analyze
}

dependencies {
    api project(":springwolf-core")
    api project(":springwolf-asyncapi")

    implementation libs.slf4j.api

    implementation platform(SpringBootPlugin.BOM_COORDINATES)
    implementation libs.spring.context
    implementation libs.spring.core

    annotationProcessor libs.lombok
    compileOnly libs.lombok

    testImplementation libs.assertj.core
    testImplementation libs.mockito.core

    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.params
    testRuntimeOnly libs.junit.jupiter
    testRuntimeOnly libs.slf4j.simple
}

jar {
    enabled = true
    archiveClassifier = ''
}
bootJar.enabled = false

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'springwolf-generic-binding'
                description = 'Document any AsyncApi binding in Springwolf using a generic way'
            }
        }
    }
}
