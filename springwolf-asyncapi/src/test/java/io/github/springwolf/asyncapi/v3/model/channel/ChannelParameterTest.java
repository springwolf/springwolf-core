// SPDX-License-Identifier: Apache-2.0
package io.github.springwolf.asyncapi.v3.model.channel;

import io.github.springwolf.asyncapi.v3.ClasspathUtil;
import io.github.springwolf.asyncapi.v3.jackson.DefaultAsyncApiSerializerService;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.Map;

import static net.javacrumbs.jsonunit.assertj.JsonAssertions.assertThatJson;

class ChannelParameterTest {
    private static final DefaultAsyncApiSerializerService serializer = new DefaultAsyncApiSerializerService();

    @Test
    void shouldSerializeChannelParameter() throws IOException {
        var channel = ChannelObject.builder()
                .address("user/{userId}/signedup")
                .parameters(Map.of(
                        "userId",
                        ChannelParameter.builder()
                                .description("Id of the user.")
                                .location("$message.payload#/user/id")
                                .build()))
                .build();

        String example = ClasspathUtil.readAsString("/v3/model/channel/parameter.json");
        assertThatJson(serializer.toJsonString(channel))
                // These values are autogenerated, so we can ignore them from the test
                .whenIgnoringPaths("bindings.amqp.bindingVersion", "bindings.amqp.queue.vhost")
                .isEqualTo(example);
    }
}
