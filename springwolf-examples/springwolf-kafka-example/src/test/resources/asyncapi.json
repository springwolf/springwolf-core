{
  "asyncapi": "3.0.0",
  "info": {
    "title": "Springwolf example project - Kafka",
    "version": "1.0.0",
    "description": "Springwolf example project to demonstrate springwolfs abilities",
    "contact": {
      "name": "springwolf",
      "url": "https://github.com/springwolf/springwolf-core",
      "email": "example@example.com"
    },
    "license": {
      "name": "Apache License 2.0"
    },
    "x-generator": "springwolf"
  },
  "defaultContentType": "application/json",
  "servers": {
    "kafka": {
      "host": "kafka:29092",
      "protocol": "kafka"
    }
  },
  "channels": {
    "another-topic": {
      "messages": {
        "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
        }
      },
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      }
    },
    "avro-topic": {
      "messages": {
        "io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto"
        }
      }
    },
    "example-topic": {
      "messages": {
        "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
        }
      },
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      }
    },
    "multi-payload-topic": {
      "messages": {
        "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
        },
        "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
        },
        "javax.money.MonetaryAmount": {
          "$ref": "#/components/messages/javax.money.MonetaryAmount"
        }
      }
    },
    "protobuf-topic": {
      "messages": {
        "io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message"
        }
      },
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      }
    },
    "string-topic": {
      "messages": {
        "io.github.stavshamir.springwolf.example.kafka.consumers.StringConsumer$StringEnvelope": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.consumers.StringConsumer$StringEnvelope"
        },
        "java.lang.String": {
          "$ref": "#/components/messages/java.lang.String"
        }
      }
    },
    "topic-defined-via-asyncPublisher-annotation": {
      "messages": {
        "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto": {
          "$ref": "#/components/messages/io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HeadersNotDocumented": {
        "type": "object",
        "properties": { },
        "example": { },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "HeadersNotDocumented",
          "type": "object"
        }
      },
      "SpringDefaultHeaderAndCloudEvent": {
        "type": "object",
        "properties": {
          "__TypeId__": {
            "type": "string",
            "description": "Spring Type Id Header",
            "example": "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto",
            "enum": [
              "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto"
            ]
          },
          "ce_id": {
            "type": "string",
            "description": "CloudEvent Id Header",
            "example": "2c60089e-6f39-459d-8ced-2d6df7e4c03a",
            "enum": [
              "2c60089e-6f39-459d-8ced-2d6df7e4c03a"
            ]
          },
          "ce_source": {
            "type": "string",
            "description": "CloudEvent Source Header",
            "example": "http://localhost",
            "enum": [
              "http://localhost"
            ]
          },
          "ce_specversion": {
            "type": "string",
            "description": "CloudEvent Spec Version Header",
            "example": "1.0",
            "enum": [
              "1.0"
            ]
          },
          "ce_subject": {
            "type": "string",
            "description": "CloudEvent Subject Header",
            "example": "Springwolf example project - Kafka",
            "enum": [
              "Springwolf example project - Kafka"
            ]
          },
          "ce_time": {
            "type": "string",
            "description": "CloudEvent Time Header",
            "example": "2023-10-28 20:01:23+00:00",
            "enum": [
              "2023-10-28 20:01:23+00:00"
            ]
          },
          "ce_type": {
            "type": "string",
            "description": "CloudEvent Payload Type Header",
            "example": "NestedPayloadDto.v1",
            "enum": [
              "NestedPayloadDto.v1"
            ]
          },
          "content-type": {
            "type": "string",
            "description": "CloudEvent Content-Type Header",
            "example": "application/json",
            "enum": [
              "application/json"
            ]
          }
        },
        "example": {
          "__TypeId__": "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto",
          "ce_id": "2c60089e-6f39-459d-8ced-2d6df7e4c03a",
          "ce_source": "http://localhost",
          "ce_specversion": "1.0",
          "ce_subject": "Springwolf example project - Kafka",
          "ce_time": "2023-10-28 20:01:23+00:00",
          "ce_type": "NestedPayloadDto.v1",
          "content-type": "application/json"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "SpringDefaultHeaderAndCloudEvent",
          "properties": {
            "__TypeId__": {
              "description": "Spring Type Id Header",
              "enum": [
                "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto"
              ],
              "type": "string"
            },
            "ce_id": {
              "description": "CloudEvent Id Header",
              "enum": [
                "2c60089e-6f39-459d-8ced-2d6df7e4c03a"
              ],
              "type": "string"
            },
            "ce_source": {
              "description": "CloudEvent Source Header",
              "enum": [
                "http://localhost"
              ],
              "type": "string"
            },
            "ce_specversion": {
              "description": "CloudEvent Spec Version Header",
              "enum": [
                "1.0"
              ],
              "type": "string"
            },
            "ce_subject": {
              "description": "CloudEvent Subject Header",
              "enum": [
                "Springwolf example project - Kafka"
              ],
              "type": "string"
            },
            "ce_time": {
              "description": "CloudEvent Time Header",
              "enum": [
                "2023-10-28 20:01:23+00:00"
              ],
              "type": "string"
            },
            "ce_type": {
              "description": "CloudEvent Payload Type Header",
              "enum": [
                "NestedPayloadDto.v1"
              ],
              "type": "string"
            },
            "content-type": {
              "description": "CloudEvent Content-Type Header",
              "enum": [
                "application/json"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "SpringKafkaDefaultHeaders-AnotherPayloadDto": {
        "type": "object",
        "properties": {
          "__TypeId__": {
            "type": "string",
            "description": "Spring Type Id Header",
            "example": "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto",
            "enum": [
              "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
            ]
          }
        },
        "example": {
          "__TypeId__": "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "SpringKafkaDefaultHeaders-AnotherPayloadDto",
          "properties": {
            "__TypeId__": {
              "description": "Spring Type Id Header",
              "enum": [
                "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "SpringKafkaDefaultHeaders-ExamplePayloadDto": {
        "type": "object",
        "properties": {
          "__TypeId__": {
            "type": "string",
            "description": "Spring Type Id Header",
            "example": "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto",
            "enum": [
              "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
            ]
          }
        },
        "example": {
          "__TypeId__": "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "SpringKafkaDefaultHeaders-ExamplePayloadDto",
          "properties": {
            "__TypeId__": {
              "description": "Spring Type Id Header",
              "enum": [
                "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "SpringKafkaDefaultHeaders-MonetaryAmount": {
        "type": "object",
        "properties": {
          "__TypeId__": {
            "type": "string",
            "description": "Spring Type Id Header",
            "example": "javax.money.MonetaryAmount",
            "enum": [
              "javax.money.MonetaryAmount"
            ]
          }
        },
        "example": {
          "__TypeId__": "javax.money.MonetaryAmount"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "SpringKafkaDefaultHeaders-MonetaryAmount",
          "properties": {
            "__TypeId__": {
              "description": "Spring Type Id Header",
              "enum": [
                "javax.money.MonetaryAmount"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "String": {
        "type": "string",
        "example": "\"string\"",
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "java.lang.String",
          "type": "string"
        }
      },
      "io.github.stavshamir.springwolf.addons.common_model_converters.converters.monetaryamount.MonetaryAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "minimum": 0.1,
            "exclusiveMinimum": true,
            "type": "number",
            "example": 99.99
          },
          "currency": {
            "type": "string",
            "example": "USD"
          }
        },
        "example": {
          "amount": 99.99,
          "currency": "USD"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "io.github.stavshamir.springwolf.addons.common_model_converters.converters.monetaryamount.MonetaryAmount",
          "properties": {
            "amount": {
              "minimum": 0.1,
              "name": "amount",
              "type": "number"
            },
            "currency": {
              "name": "currency",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.consumers.StringConsumer$StringEnvelope": {
        "maxLength": 100,
        "type": "string",
        "description": "Payload description using @Schema annotation and @AsyncApiPayload within envelope class",
        "example": "\"string\"",
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "description": "Payload description using @Schema annotation and @AsyncApiPayload within envelope class",
          "maxLength": 100,
          "name": "payload",
          "type": "string"
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto": {
        "type": "object",
        "properties": {
          "someEnum": {
            "type": "string",
            "enum": [
              "FOO1",
              "FOO2",
              "FOO3"
            ]
          },
          "someLong": {
            "type": "integer",
            "format": "int32"
          },
          "someString": {
            "type": "string"
          }
        },
        "example": {
          "someEnum": "FOO1",
          "someLong": 0,
          "someString": "string"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto",
          "properties": {
            "someEnum": {
              "enum": [
                "FOO1",
                "FOO2",
                "FOO3"
              ],
              "name": "someEnum",
              "type": "string"
            },
            "someLong": {
              "format": "int32",
              "name": "someLong",
              "type": "integer"
            },
            "someString": {
              "name": "someString",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message": {
        "type": "object",
        "properties": {
          "someEnum": {
            "type": "string",
            "enum": [
              "FOO1",
              "FOO2",
              "FOO3",
              "UNRECOGNIZED"
            ]
          },
          "someLong": {
            "type": "integer",
            "format": "int64"
          },
          "someString": {
            "type": "string"
          }
        },
        "example": {
          "someEnum": "FOO1",
          "someLong": 0,
          "someString": "string"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "name": "io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message",
          "properties": {
            "someEnum": {
              "enum": [
                "FOO1",
                "FOO2",
                "FOO3",
                "UNRECOGNIZED"
              ],
              "name": "someEnum",
              "type": "string"
            },
            "someLong": {
              "format": "int64",
              "name": "someLong",
              "type": "integer"
            },
            "someString": {
              "name": "someString",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto": {
        "required": [
          "example"
        ],
        "type": "object",
        "properties": {
          "example": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
          },
          "foo": {
            "type": "string",
            "description": "Foo field",
            "example": "bar"
          }
        },
        "description": "Another payload model",
        "example": {
          "example": {
            "someEnum": "FOO2",
            "someLong": 5,
            "someString": "some string value"
          },
          "foo": "bar"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "description": "Another payload model",
          "name": "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto",
          "properties": {
            "example": {
              "description": "Example payload model",
              "name": "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto",
              "properties": {
                "someEnum": {
                  "description": "Some enum field",
                  "enum": [
                    "FOO1",
                    "FOO2",
                    "FOO3"
                  ],
                  "name": "someEnum",
                  "type": "string"
                },
                "someLong": {
                  "description": "Some long field",
                  "format": "int64",
                  "name": "someLong",
                  "type": "integer"
                },
                "someString": {
                  "description": "Some string field",
                  "name": "someString",
                  "type": "string"
                }
              },
              "required": [
                "someEnum",
                "someString"
              ],
              "type": "object"
            },
            "foo": {
              "description": "Foo field",
              "name": "foo",
              "type": "string"
            }
          },
          "required": [
            "example"
          ],
          "type": "object"
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto": {
        "required": [
          "someEnum",
          "someString"
        ],
        "type": "object",
        "properties": {
          "someEnum": {
            "type": "string",
            "description": "Some enum field",
            "example": "FOO2",
            "enum": [
              "FOO1",
              "FOO2",
              "FOO3"
            ]
          },
          "someLong": {
            "type": "integer",
            "description": "Some long field",
            "format": "int64",
            "example": 5
          },
          "someString": {
            "type": "string",
            "description": "Some string field",
            "example": "some string value"
          }
        },
        "description": "Example payload model",
        "example": {
          "someEnum": "FOO2",
          "someLong": 5,
          "someString": "some string value"
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "description": "Example payload model",
          "name": "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto",
          "properties": {
            "someEnum": {
              "description": "Some enum field",
              "enum": [
                "FOO1",
                "FOO2",
                "FOO3"
              ],
              "name": "someEnum",
              "type": "string"
            },
            "someLong": {
              "description": "Some long field",
              "format": "int64",
              "name": "someLong",
              "type": "integer"
            },
            "someString": {
              "description": "Some string field",
              "name": "someString",
              "type": "string"
            }
          },
          "required": [
            "someEnum",
            "someString"
          ],
          "type": "object"
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto": {
        "type": "object",
        "properties": {
          "examplePayloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
            }
          },
          "someStrings": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Some string field",
              "example": "some string value"
            }
          }
        },
        "description": "Payload model with nested complex types",
        "example": {
          "examplePayloads": [
            {
              "someEnum": "FOO2",
              "someLong": 5,
              "someString": "some string value"
            }
          ],
          "someStrings": [
            "some string value"
          ]
        },
        "x-json-schema": {
          "$schema": "https://json-schema.org/draft-04/schema#",
          "description": "Payload model with nested complex types",
          "name": "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto",
          "properties": {
            "examplePayloads": {
              "items": { },
              "name": "examplePayloads",
              "type": "array"
            },
            "someStrings": {
              "items": {
                "description": "Some string field",
                "type": "string"
              },
              "name": "someStrings",
              "type": "array",
              "uniqueItems": true
            }
          },
          "type": "object"
        }
      }
    },
    "messages": {
      "io.github.stavshamir.springwolf.example.kafka.consumers.StringConsumer$StringEnvelope": {
        "headers": {
          "$ref": "#/components/schemas/HeadersNotDocumented"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.consumers.StringConsumer$StringEnvelope"
          }
        },
        "name": "io.github.stavshamir.springwolf.example.kafka.consumers.StringConsumer$StringEnvelope",
        "title": "StringEnvelope",
        "bindings": {
          "kafka": {
            "bindingVersion": "0.4.0"
          }
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto": {
        "headers": {
          "$ref": "#/components/schemas/HeadersNotDocumented"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto"
          }
        },
        "name": "io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto",
        "title": "ExamplePayloadAvroDto",
        "bindings": {
          "kafka": {
            "bindingVersion": "0.4.0"
          }
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message": {
        "headers": {
          "$ref": "#/components/schemas/HeadersNotDocumented"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message"
          }
        },
        "name": "io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message",
        "title": "Message",
        "bindings": {
          "kafka": {
            "bindingVersion": "0.4.0"
          }
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto": {
        "headers": {
          "$ref": "#/components/schemas/HeadersNotDocumented"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
          }
        },
        "name": "io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto",
        "title": "AnotherPayloadDto",
        "bindings": {
          "kafka": {
            "bindingVersion": "0.4.0"
          }
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto": {
        "headers": {
          "$ref": "#/components/schemas/HeadersNotDocumented"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
          }
        },
        "name": "io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto",
        "title": "ExamplePayloadDto",
        "bindings": {
          "kafka": {
            "bindingVersion": "0.4.0"
          }
        }
      },
      "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto": {
        "headers": {
          "$ref": "#/components/schemas/SpringDefaultHeaderAndCloudEvent"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto"
          }
        },
        "name": "io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto",
        "title": "NestedPayloadDto",
        "description": "Payload model with nested complex types",
        "bindings": {
          "kafka": {
            "key": {
              "type": "string",
              "description": "Kafka Producer Message Key",
              "examples": [
                "example-key"
              ]
            },
            "bindingVersion": "0.4.0"
          }
        }
      },
      "java.lang.String": {
        "headers": {
          "$ref": "#/components/schemas/HeadersNotDocumented"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/String"
          }
        },
        "name": "java.lang.String",
        "title": "String",
        "bindings": {
          "kafka": {
            "bindingVersion": "0.4.0"
          }
        }
      },
      "javax.money.MonetaryAmount": {
        "headers": {
          "$ref": "#/components/schemas/SpringKafkaDefaultHeaders-MonetaryAmount"
        },
        "payload": {
          "schemaFormat": "application/vnd.aai.asyncapi+json;version=3.0.0",
          "schema": {
            "$ref": "#/components/schemas/io.github.stavshamir.springwolf.addons.common_model_converters.converters.monetaryamount.MonetaryAmount"
          }
        },
        "name": "javax.money.MonetaryAmount",
        "title": "MonetaryAmount",
        "bindings": {
          "kafka": {
            "bindingVersion": "0.4.0"
          }
        }
      }
    }
  },
  "operations": {
    "another-topic_receive_receiveAnotherPayloadBatched": {
      "action": "receive",
      "channel": {
        "$ref": "#/channels/another-topic"
      },
      "bindings": {
        "kafka": {
          "groupId": {
            "type": "string",
            "enum": [
              "example-group-id"
            ]
          },
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/another-topic/messages/io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
        }
      ]
    },
    "avro-topic_receive_receiveExampleAvroPayload": {
      "action": "receive",
      "channel": {
        "$ref": "#/channels/avro-topic"
      },
      "title": "avro-topic_receive",
      "description": "Requires a running kafka-schema-registry. See docker-compose.yml to start it",
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/avro-topic/messages/io.github.stavshamir.springwolf.example.kafka.dto.avro.ExamplePayloadAvroDto"
        }
      ]
    },
    "example-topic_receive_receiveExamplePayload": {
      "action": "receive",
      "channel": {
        "$ref": "#/channels/example-topic"
      },
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/example-topic/messages/io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
        }
      ]
    },
    "multi-payload-topic_receive_ExampleClassLevelKafkaListener": {
      "action": "receive",
      "channel": {
        "$ref": "#/channels/multi-payload-topic"
      },
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/multi-payload-topic/messages/io.github.stavshamir.springwolf.example.kafka.dtos.AnotherPayloadDto"
        },
        {
          "$ref": "#/channels/multi-payload-topic/messages/io.github.stavshamir.springwolf.example.kafka.dtos.ExamplePayloadDto"
        },
        {
          "$ref": "#/channels/multi-payload-topic/messages/javax.money.MonetaryAmount"
        }
      ]
    },
    "multi-payload-topic_receive_receiveMonetaryAmount": {
      "action": "receive",
      "channel": {
        "$ref": "#/channels/multi-payload-topic"
      },
      "title": "multi-payload-topic_receive",
      "description": "Override description in the AsyncListener annotation with servers at kafka:29092",
      "bindings": {
        "kafka": {
          "groupId": {
            "type": "string",
            "enum": [
              "foo-groupId"
            ]
          },
          "clientId": {
            "type": "string",
            "enum": [
              "foo-clientId"
            ]
          },
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/multi-payload-topic/messages/javax.money.MonetaryAmount"
        }
      ]
    },
    "protobuf-topic_receive_receiveExampleProtobufPayload": {
      "action": "receive",
      "channel": {
        "$ref": "#/channels/protobuf-topic"
      },
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/protobuf-topic/messages/io.github.stavshamir.springwolf.example.kafka.dto.proto.ExamplePayloadProtobufDto$Message"
        }
      ]
    },
    "string-topic_receive_receiveStringPayload": {
      "action": "receive",
      "channel": {
        "$ref": "#/channels/string-topic"
      },
      "title": "string-topic_receive",
      "description": "Final classes (like String) can be documented using an envelope class and the @AsyncApiPayload annotation.",
      "bindings": {
        "kafka": {
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/string-topic/messages/io.github.stavshamir.springwolf.example.kafka.consumers.StringConsumer$StringEnvelope"
        },
        {
          "$ref": "#/channels/string-topic/messages/java.lang.String"
        }
      ]
    },
    "topic-defined-via-asyncPublisher-annotation_send_sendMessage": {
      "action": "send",
      "channel": {
        "$ref": "#/channels/topic-defined-via-asyncPublisher-annotation"
      },
      "title": "topic-defined-via-asyncPublisher-annotation_send",
      "description": "Custom, optional description defined in the AsyncPublisher annotation",
      "bindings": {
        "kafka": {
          "clientId": {
            "type": "string",
            "enum": [
              "foo-clientId"
            ]
          },
          "bindingVersion": "0.4.0"
        }
      },
      "messages": [
        {
          "$ref": "#/channels/topic-defined-via-asyncPublisher-annotation/messages/io.github.stavshamir.springwolf.example.kafka.dtos.NestedPayloadDto"
        }
      ]
    }
  }
}