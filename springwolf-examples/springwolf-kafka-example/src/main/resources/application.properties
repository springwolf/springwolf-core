#########
# Spring configuration
spring.application.name=Springwolf example project - Kafka


#########
# Spring kafka configuration
spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVER:localhost:9092}

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100ms
spring.kafka.consumer.group-id=example-group-id
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=io.github.stavshamir.springwolf.*
# if needed, authentication can be enabled as well:
#spring.kafka.consumer.security.protocol=SASL_PLAINTEXT
#spring.kafka.consumer.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="broker" password="broker-secret";
#spring.kafka.consumer.properties.sasl.mechanism=PLAIN
#spring.kafka.consumer.properties.session.timeout.ms=15000


#########
# Springwolf configuration
springwolf.enabled=true
springwolf.docket.base-package=io.github.stavshamir.springwolf.example.kafka
springwolf.docket.info.title=${spring.application.name}
springwolf.docket.info.version=1.0.0
springwolf.docket.info.description=Springwolf example project to demonstrate springwolfs abilities
springwolf.docket.info.terms-of-service=http://asyncapi.org/terms
springwolf.docket.info.contact.name=springwolf
springwolf.docket.info.contact.email=example@example.com
springwolf.docket.info.contact.url=https://github.com/springwolf/springwolf-core
springwolf.docket.info.license.name=Apache License 2.0

# Springwolf kafka configuration
springwolf.docket.servers.kafka.protocol=kafka
springwolf.docket.servers.kafka.url=${spring.kafka.bootstrap-servers}
springwolf.plugin.kafka.publishing.enabled=true
springwolf.plugin.kafka.publishing.producer.bootstrap-servers=${BOOTSTRAP_SERVER_SASL:localhost:9093}
springwolf.plugin.kafka.publishing.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
springwolf.plugin.kafka.publishing.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# springwolf publisher has its own kafka configuration.
# Connects to kafka via sasl authentication (for demonstration purposes)
springwolf.plugin.kafka.publishing.producer.security.protocol=SASL_PLAINTEXT
springwolf.plugin.kafka.publishing.producer.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="broker" password="broker-secret";
springwolf.plugin.kafka.publishing.producer.properties.sasl.mechanism=PLAIN
