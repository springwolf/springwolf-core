plugins {
    id 'java'

    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'ca.cutterslade.analyze'
    id 'com.bmuschko.docker-spring-boot-application'
}

ext {
    set('springCloudVersion', "2022.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    testImplementation project(":springwolf-core")

    runtimeOnly project(":springwolf-plugins:springwolf-cloud-stream")
    annotationProcessor project(":springwolf-plugins:springwolf-cloud-stream")

    implementation project(":springwolf-bindings:springwolf-googlepubsub-binding")

    runtimeOnly project(":springwolf-ui")
    runtimeOnly "org.springframework.boot:spring-boot-starter-web"
    runtimeOnly "org.springframework.boot:spring-boot-starter-actuator"
    runtimeOnly "org.springframework.cloud:spring-cloud-starter-stream-kafka"

    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    implementation "io.swagger.core.v3:swagger-annotations-jakarta:${swaggerVersion}"

    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot"
    implementation "org.springframework:spring-context"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"

    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation "org.springframework:spring-test"

    testImplementation "org.springframework:spring-beans"
    testImplementation "org.springframework:spring-web"
    testImplementation "org.springframework.kafka:spring-kafka-test"
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
}

docker {
    springBootApplication {
        maintainer = 'shamir.stav@gmail.com'
        baseImage = 'eclipse-temurin:17-jre-focal'
        ports = [8080]
        images = ["stavshamir/springwolf-cloud-stream-example:${project.version}"]
    }

    registryCredentials {
        username = project.findProperty('DOCKERHUB_USERNAME') ?: ''
        password = project.findProperty('DOCKERHUB_TOKEN') ?: ''
    }
}

test {
    dependsOn dockerBuildImage
}
