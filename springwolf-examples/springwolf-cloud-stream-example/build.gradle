import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'

    alias libs.plugins.spring.boot
    alias libs.plugins.cutterslade.analyze
    alias libs.plugins.docker.spring.boot
}

dependencies {
    runtimeOnly project(":springwolf-core")

    runtimeOnly project(":springwolf-plugins:springwolf-cloud-stream")
    implementation project(":springwolf-bindings:springwolf-googlepubsub-binding")

    annotationProcessor project(":springwolf-plugins:springwolf-cloud-stream")

    runtimeOnly project(":springwolf-ui")

    implementation libs.slf4j.api
    implementation libs.swagger.annotations.jakarta

    implementation platform(SpringBootPlugin.BOM_COORDINATES)
    implementation libs.spring.cloud.dependencies
    implementation libs.spring.boot.autoconfigure
    implementation libs.spring.boot
    implementation libs.spring.context
    runtimeOnly libs.spring.boot.starter.web
    runtimeOnly libs.spring.boot.starter.actuator
    runtimeOnly libs.spring.cloud.starter.stream.kafka

    compileOnly libs.lombok

    annotationProcessor libs.lombok

    testImplementation libs.assertj.core
    testImplementation libs.spring.boot.test
    testImplementation libs.spring.test

    testImplementation libs.spring.beans
    testImplementation libs.spring.web
    testImplementation libs.spring.kafka.test
    testImplementation libs.testcontainers
    testImplementation libs.testcontainers.junit.jupiter

    testAnnotationProcessor libs.lombok
    testCompileOnly libs.lombok

    testImplementation libs.junit.jupiter.api
    testRuntimeOnly libs.junit.jupiter
}

docker {
    springBootApplication {
        maintainer = 'shamir.stav@gmail.com'
        baseImage = 'eclipse-temurin:17-jre-focal'
        ports = [8080]
        images = ["stavshamir/springwolf-cloud-stream-example:${project.version}"]
    }

    registryCredentials {
        username = project.findProperty('DOCKERHUB_USERNAME') ?: ''
        password = project.findProperty('DOCKERHUB_TOKEN') ?: ''
    }
}

test {
    dependsOn dockerBuildImage
}
