{
  "asyncapi" : "2.0.0",
  "info" : {
    "title" : "Springwolf example project - AMQP",
    "version" : "1.0.0",
    "description" : "Springwolf example project to demonstrate springwolfs abilities",
    "contact" : {
      "name" : "springwolf",
      "url" : "https://github.com/springwolf/springwolf-core",
      "email" : "example@example.com"
    },
    "license" : {
      "name" : "Apache License 2.0"
    }
  },
  "servers" : {
    "amqp" : {
      "url" : "amqp:5672",
      "protocol" : "amqp"
    }
  },
  "channels" : {
    "another-queue" : {
      "publish" : {
        "operationId" : "another-queue_publish_receiveAnotherPayload",
        "description" : "Auto-generated description",
        "bindings" : {
          "amqp" : {
            "expiration" : 0,
            "cc" : [ "another-queue" ],
            "priority" : 0,
            "deliveryMode" : 0,
            "mandatory" : false,
            "timestamp" : false,
            "ack" : false
          }
        },
        "message" : {
          "name" : "io.github.stavshamir.springwolf.example.dtos.AnotherPayloadDto",
          "title" : "AnotherPayloadDto",
          "payload" : {
            "$ref" : "#/components/schemas/AnotherPayloadDto"
          },
          "headers" : {
            "$ref" : "#/components/schemas/HeadersNotDocumented"
          }
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "exchange" : {
            "name" : "",
            "autoDelete" : false
          }
        }
      }
    },
    "example-bindings-queue" : {
      "publish" : {
        "operationId" : "example-bindings-queue_publish_bindingsExample",
        "description" : "Auto-generated description",
        "bindings" : {
          "amqp" : {
            "expiration" : 0,
            "cc" : [ "" ],
            "priority" : 0,
            "deliveryMode" : 0,
            "mandatory" : false,
            "timestamp" : false,
            "ack" : false
          }
        },
        "message" : {
          "name" : "io.github.stavshamir.springwolf.example.dtos.AnotherPayloadDto",
          "title" : "AnotherPayloadDto",
          "payload" : {
            "$ref" : "#/components/schemas/AnotherPayloadDto"
          },
          "headers" : {
            "$ref" : "#/components/schemas/HeadersNotDocumented"
          }
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "exchange" : {
            "name" : "name",
            "autoDelete" : false
          }
        }
      }
    },
    "example-manual-consumer-channel" : {
      "publish" : {
        "operationId" : "example-manual-consumer-channel_publish",
        "description" : "Auto-generated description",
        "bindings" : {
          "amqp" : {
            "expiration" : 0,
            "cc" : [ "example-consumer-topic-routing-key" ],
            "priority" : 0,
            "deliveryMode" : 0,
            "mandatory" : false,
            "timestamp" : false,
            "ack" : false
          }
        },
        "message" : {
          "name" : "io.github.stavshamir.springwolf.example.dtos.AnotherPayloadDto",
          "title" : "AnotherPayloadDto",
          "description" : "example-manual-consumer-channel-description",
          "payload" : {
            "$ref" : "#/components/schemas/AnotherPayloadDto"
          },
          "headers" : {
            "$ref" : "#/components/schemas/HeadersNotDocumented"
          }
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "exchange" : {
            "name" : "example-consumer-topic-exchange",
            "autoDelete" : false
          }
        }
      }
    },
    "example-producer-channel" : {
      "subscribe" : {
        "operationId" : "example-producer-channel_subscribe",
        "description" : "Auto-generated description",
        "bindings" : {
          "amqp" : {
            "expiration" : 0,
            "cc" : [ "example-topic-routing-key" ],
            "priority" : 0,
            "deliveryMode" : 0,
            "mandatory" : false,
            "timestamp" : false,
            "ack" : false
          }
        },
        "message" : {
          "name" : "io.github.stavshamir.springwolf.example.dtos.AnotherPayloadDto",
          "title" : "AnotherPayloadDto",
          "description" : "example-producer-channel-description",
          "payload" : {
            "$ref" : "#/components/schemas/AnotherPayloadDto"
          },
          "headers" : {
            "$ref" : "#/components/schemas/HeadersNotDocumented"
          }
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "exchange" : {
            "name" : "example-topic-exchange",
            "autoDelete" : false
          }
        }
      }
    },
    "example-queue" : {
      "publish" : {
        "operationId" : "example-queue_publish_receiveExamplePayload",
        "description" : "Auto-generated description",
        "bindings" : {
          "amqp" : {
            "expiration" : 0,
            "cc" : [ "example-queue" ],
            "priority" : 0,
            "deliveryMode" : 0,
            "mandatory" : false,
            "timestamp" : false,
            "ack" : false
          }
        },
        "message" : {
          "name" : "io.github.stavshamir.springwolf.example.dtos.ExamplePayloadDto",
          "title" : "ExamplePayloadDto",
          "payload" : {
            "$ref" : "#/components/schemas/ExamplePayloadDto"
          },
          "headers" : {
            "$ref" : "#/components/schemas/HeadersNotDocumented"
          }
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "exchange" : {
            "name" : "",
            "autoDelete" : false
          }
        }
      }
    },
    "example-topic-queue" : {
      "publish" : {
        "operationId" : "example-topic-queue_publish_bindingsBeanExample",
        "description" : "Auto-generated description",
        "bindings" : {
          "amqp" : {
            "expiration" : 0,
            "cc" : [ "example-topic-routing-key" ],
            "priority" : 0,
            "deliveryMode" : 0,
            "mandatory" : false,
            "timestamp" : false,
            "ack" : false
          }
        },
        "message" : {
          "name" : "io.github.stavshamir.springwolf.example.dtos.AnotherPayloadDto",
          "title" : "AnotherPayloadDto",
          "payload" : {
            "$ref" : "#/components/schemas/AnotherPayloadDto"
          },
          "headers" : {
            "$ref" : "#/components/schemas/HeadersNotDocumented"
          }
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "exchange" : {
            "name" : "example-topic-exchange",
            "autoDelete" : false
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AnotherPayloadDto" : {
        "required" : [ "example" ],
        "type" : "object",
        "properties" : {
          "foo" : {
            "type" : "string",
            "description" : "Foo field",
            "example" : "bar",
            "exampleSetFlag" : true
          },
          "example" : {
            "$ref" : "#/components/schemas/ExamplePayloadDto",
            "exampleSetFlag" : false
          }
        },
        "description" : "Another payload model",
        "example" : {
          "foo" : "bar",
          "example" : {
            "someString" : "some string value",
            "someLong" : 5,
            "someEnum" : "FOO2"
          }
        },
        "exampleSetFlag" : true
      },
      "ExamplePayloadDto" : {
        "required" : [ "someEnum", "someString" ],
        "type" : "object",
        "properties" : {
          "someString" : {
            "type" : "string",
            "description" : "Some string field",
            "example" : "some string value",
            "exampleSetFlag" : true
          },
          "someLong" : {
            "type" : "integer",
            "description" : "Some long field",
            "format" : "int64",
            "example" : 5,
            "exampleSetFlag" : true
          },
          "someEnum" : {
            "type" : "string",
            "description" : "Some enum field",
            "example" : "FOO2",
            "exampleSetFlag" : true,
            "enum" : [ "FOO1", "FOO2", "FOO3" ]
          }
        },
        "description" : "Example payload model",
        "example" : {
          "someString" : "some string value",
          "someLong" : 5,
          "someEnum" : "FOO2"
        },
        "exampleSetFlag" : true
      },
      "HeadersNotDocumented" : {
        "type" : "object",
        "properties" : { },
        "example" : { },
        "exampleSetFlag" : true
      }
    }
  },
  "tags" : [ ]
}