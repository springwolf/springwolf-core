plugins {
    id 'java'

    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.1.0'

    id 'com.bmuschko.docker-spring-boot-application' version '6.7.0'
}

sourceCompatibility = '1.8'
version '0.6.0'

repositories {
    // For local development with snapshots
    mavenLocal() {
        content {
            includeGroup "io.github.springwolf"
        }
    }

    mavenCentral()
}

dependencies {
    implementation project(":springwolf-plugins:springwolf-amqp-plugin")
    compileOnly project(":springwolf-plugins:springwolf-amqp-plugin")
    annotationProcessor project(":springwolf-plugins:springwolf-amqp-plugin")
    runtimeOnly 'io.github.springwolf:springwolf-ui:0.6.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.amqp:spring-rabbit'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.slf4j:slf4j-api'
    implementation 'io.swagger.core.v3:swagger-core:2.2.7'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
    testImplementation 'org.apache.directory.studio:org.apache.commons.io:2.4'
}

docker {
    springBootApplication {
        maintainer = 'shamir.stav@gmail.com'
        baseImage = 'openjdk:8-alpine'
        ports = [8080]
        images = ["stavshamir/springwolf-amqp-example:${project.version}"]
    }

    registryCredentials {
        username = project.findProperty('dockerhubUsername') ?: ''
        password = project.findProperty('dockerhubPassword') ?: ''
    }
}

test {
    dependsOn dockerBuildImage

    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}
