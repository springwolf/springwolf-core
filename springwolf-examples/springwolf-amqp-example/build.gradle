plugins {
    id 'java'

    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'ca.cutterslade.analyze'

    id 'com.bmuschko.docker-spring-boot-application' version '8.1.0'
}

dependencies {
    implementation project(":springwolf-core")
    implementation project(":springwolf-plugins:springwolf-amqp-plugin")

    annotationProcessor project(":springwolf-plugins:springwolf-amqp-plugin")
    runtimeOnly project(":springwolf-ui")

    runtimeOnly "org.springframework.boot:spring-boot-starter-web"

    implementation "org.springframework.amqp:spring-rabbit"
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    implementation "io.swagger.core.v3:swagger-annotations:${swaggerVersion}"
    implementation "com.asyncapi:asyncapi-core:${asyncapiCoreVersion}"

    implementation "org.springframework.amqp:spring-amqp"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot"
    implementation "org.springframework:spring-beans"
    implementation "org.springframework:spring-context"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"

    testImplementation "commons-io:commons-io:${commonsIoVersion}"
    testImplementation "com.vaadin.external.google:android-json:${androidJsonVersion}"

    testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"

    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation "org.springframework:spring-web"
    testImplementation "org.springframework:spring-test"

    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
}

// We don't want to publish the examples
tasks.withType(PublishToMavenRepository).configureEach { it.enabled = false }
tasks.withType(PublishToMavenLocal).configureEach { it.enabled = false }

docker {
    springBootApplication {
        maintainer = 'shamir.stav@gmail.com'
        baseImage = 'eclipse-temurin:17-jre-focal'
        ports = [8080]
        images = ["stavshamir/springwolf-amqp-example:${project.version}"]
    }

    registryCredentials {
        username = project.findProperty('DOCKERHUB_USERNAME') ?: ''
        password = project.findProperty('DOCKERHUB_TOKEN') ?: ''
    }
}

test {
    dependsOn dockerBuildImage
    dependsOn spotlessApply // Automatically fix code formatting if possible

    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

spotless {
    encoding 'UTF-8'

    java {
        palantirJavaFormat()

        importOrder('', 'javax', 'java', '\\#')
        replaceRegex("Remove wildcard imports", "import\\s+[^\\*\\s]+\\*;(\\r\\n|\\r|\\n)", "\$1")
        removeUnusedImports()

        trimTrailingWhitespace()
        endWithNewline()
    }
}
